<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper的命名空间 要和Mapper接口的 全类名保持一致 -->
<mapper namespace="com.atguigu.mybatis.mapper.EmpMapper">

    <!--
        resultMap : 设置自定义的映射关系 , id :唯一标识 , type: 映射的实体类型
            id 标签 : 设置 主键和实体属性的 映射
            result : 设置 普通字段和实体属性的 映射


                column: 设置 要映射的 字段名
                property: 设置 要映射的 属性名
     -->
    <resultMap id="empResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
    </resultMap>


    <!-- Emp getEmpByEmpId(String empId); -->
    <select id="getEmpByEmpId" resultMap="empResultMap">
        <!-- select emp_id empId,emp_name empName,age,gender from t_emp where emp_id=#{empId} -->
        select emp_id,emp_name,age,gender,dept  from t_emp where emp_id=#{empId}
    </select>



    <!-- Emp getEmpByEmpIdOld(String empId); -->
    <select id="getEmpByEmpIdOld" resultType="Emp">
        <!-- select emp_id empId,emp_name empName,age,gender from t_emp where emp_id=#{empId} -->
        select emp_id,emp_name,age,gender,dept from t_emp where emp_id=#{empId}
    </select>



    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <!-- 映射 属性dept的两个属性 dept_id 和 dept_name 为 dept.deptId 和 dept.deptName -->
        <result column="dept_id" property="dept.deptId"></result>
        <result column="dept_name" property="dept.deptName"></result>
    </resultMap>


    <resultMap id="empAndDeptResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>

        <!-- associate 映射  类类型属性的装配 , 给类类型赋值  -->
        <association property="dept" javaType="Dept">
            <id column="dept_id" property="deptId"></id>
            <id column="dept_name" property="deptName"></id>
        </association>
    </resultMap>
    
    <!-- Emp getEmpAndDeptByEmpId(@Param("empId") Integer empId); -->
    <select id="getEmpAndDeptByEmpId" resultMap="empAndDeptResultMap">
        select emp_id,emp_name,age,gender , t_dept.dept_id ,t_dept.dept_name
        from t_emp left join t_dept
        on t_emp.dept_id = t_dept.dept_id
        where emp_id=#{empId}
    </select>



    <resultMap id="empAndDeptByStepResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>

        <!--
            property属性 ,用来表明 , 是给哪个类类型的属性 ,设置 映射 ,从而实现 注入
            select属性, 用来选择 哪条sql语句 查询出的结果 给 property属性赋值 , 这个接口方法的类型 一定和property的类型一样
            column属性, 用来表明 , 上一步的sql语句 查出的结果 的哪个字段 , 赋值给 上面select属性对应的sql语句的占位符里
         -->
        <association property="dept" fetchType="eager"
                     select="com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     column="dept_id"></association>
    </resultMap>

    <!-- Emp getEmpAndDeptByStepOne(@Param("empId") Integer empId); -->
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptByStepResultMap">
        select emp_id,emp_name,age,gender,dept_id from t_emp where emp_id=#{empId}
    </select>


    <!-- Dept getDeptAndEmpByStepOne(@Param("deptId")Integer deptId); -->
    <select id="getDeptAndEmpByStepTwo" resultType="Emp">
        select emp_id,emp_name,age,gender,dept_id from t_emp where dept_id=#{deptId}
    </select>
</mapper>